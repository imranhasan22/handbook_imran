=============================================VERSION CONTROL INTRODUCTION START===============================================
!!Version Control System(VCS) is a kind of database which lets you save a snapshot of the complete project at any point of time
!!Every change made to the project files is tracked, along with
-> Who made the change
-> Why the change was made(refernces to problems fixed or features added in the change)

!!later when it is required to take a look at an older snapshot/version, VCS shows how exactly it differed from the previous one
!!It help teams manage and track changes in code over time

!!Why version control system is needed?
1.COLLABORATION: if the developers works on a same project from different regions, it will be hard for them to collaborate without the version control system
2.STRONG VERSIONS: managing multiple versions of a project in your disk can be challenging as it requires storing and organizing a potentially large amount of data
3.RESTORING PREVIOUS VERSIONS: vcs offer the ability to roll back to a previous version if needed. If a mistake or issue is introduced, developers can revert to a known working state of the project
4.BACKUP: in casy of system or the disk of the user breaks down and there is no backup all the files will be lost hence vcs should be used

!!Types of VCS are:
1.Local Version Control System(file_1.txt->file_2.txt->file_3.txt)
2.Centralized Version Control System
3.Distributed Version Control System(Latest)

!!What is Git?
-> Git is a distributed vcs widely used in software development
-> It allows multiple developers to work collaboratively on a project
-> Can efficiently manage and track changes to the source code

!!How Git works?
-> Git stores its data in a series of snapshots of a miniature filesystem. Every time you commit change or save your project state, Git takes a snapshot of all your files at that moment and stores a refernces to that snapshot
-> A git project resides in three sections:
1.THE WORKING DIRECTORY: The single checkout of one version of the project
2.THE STAGING AREA: An index that stores information about what the next commit will contain
3.THE GIT REPOSITORY: The place where Git stores the metadata and object database for a project

8.08-10.37 - PROGRAMMING HERO
-> COMMIT -> STAGE -> REPOSITORY
-> GIT LAB, BIT BUCKET
=============================================VERSION CONTROL INTRODUCTION END===============================================

=============================================GIT CONFIGURATION START===============================================
!!we need to connect our git with our github account, we do it using git config
//set user name : git config --global user.name "your_name"
//set user email: git config --global user.email "your_email"
//check config  : get config --list or git config -l
//to update the data, just reassign the data

!!for the first time after git configuration, when you want to push some document, you need to login/authenticate your github account
=============================================GIT CONFIGURATION END===============================================
